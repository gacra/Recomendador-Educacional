----------------
 ORGANIZAÇÃO IC
----------------

********
Classes
********

Item:
	titulo: str
	link:str
	resumo: str
	tipo: 'html'|'pdf'|'outro'
	termos: ['termo1', 'termo2', ...] OU {'termo1': tf_idf1, 'termo2': tf_idf2, ...}

Pergunta:
	id: int
	termosPerg: ['termo1', 'termo2', ...] OU {'termo1': tf_idf1, 'termo2': tf_idf2, ...}

******************
 Pré-Recomendador
******************

preRecomendador.get_itens_prePerfil(termoBusca, chaveAPI, pesquisaID, arqPerguntas)
	--> [item1, item2, ...], [pergunta1, pergunta2, ...] (obs: atributo 'termos' para {'termo1': tf_idf1, ...} e 'termosPerg' para {'termo1': (freq, idf)})

	* googleAPI.googleSearch(termoBusca, chaveAPI, pesquisaID)
		--> [item1, item2, ...] (obs: campo termos = None)

	* P/ cada item:
	  crawler.get_content(item.get('link'), item.get('tipo'))
	  --> ['termo1', 'termo2', 'termo3', ...]

	* Une tudo:
		--> [item1, item2, ...] (Campo termos setados)
 
	* perguntas.get_perguntas(arqPerguntas)
		--> [pergunta1, pergunta2, ...]
		
	* pesagem._tf_idf([item1, item2, ...], [pergunta1, pergunta2, ...])
		--> Altera o atributo 'termos' para {'termo1': tf_idf1, ...} e 'termosPerg' para {'termo1': (freq, idf)}

**************
 Recomendador
**************

Entrada:	[item1, item2, ...]
					[pergunta1, pergunta2, ...]
					id das perguntas erradas

perfil.montarPerfil(pergunta1', pergunta2' ...]) (obs: apenas os testes errados)
	-->{'termo1Perfil':tf_idf1, 'termo2Perfil':tf_idf2, ...}

recomendador.recomendacao({'termo1Perfil':tf_idf1, 'termo2Perfil':tf_idf2, ...}, [item1, item2])
	--> [item1', item2', ...] (Ordenado por ordem de similaridade)

	* similaridade.Similaridade({'termo1Perfil':tf_idf1, 'termo2Perfil':tf_idf2, ...})
	  Similaridade.simCosseno({'termo1':tf_idf1, 'termo2':tf_idf2, ...})
	  -->similaridade