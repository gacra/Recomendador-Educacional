CREATE (mat:Material {titulo: "Tipos de dados", link: "http://tiposdedados.com.br", tipo: "html", id: "re_material.000", resumo: "Resumo tipos de dados"})

MERGE (termo1:Termo {termo: "tipo"})
CREATE (mat)-[:Possui {quantidade: 5}]->(termo1)
MERGE (termo2:Termo {termo: "dado"})
CREATE (mat)-[:Possui {quantidade: 5}]->(termo2)
MERGE (termo3:Termo {termo: "variável"})
CREATE (mat)-[:Possui {quantidade: 2}]->(termo3)
MERGE (termo4:Termo {termo: "int"})
CREATE (mat)-[:Possui {quantidade: 1}]->(termo4)
MERGE (termo5:Termo {termo: "float"})
CREATE (mat)-[:Possui {quantidade: 2}]->(termo5)
MERGE (termo6:Termo {termo: "char"})
CREATE (mat)-[:Possui {quantidade: 1}]->(termo6)


CREATE (mat:Material {titulo: "Comandos de Repetição", link: "http://comandosderepeticao.com.br", tipo: "html", id: "re_material.001", resumo: "Resumo comandos repeticao"})

MERGE (termo1:Termo {termo: "repetição"})
CREATE (mat)-[:Possui {quantidade: 4}]->(termo1)
MERGE (termo2:Termo {termo: "comando"})
CREATE (mat)-[:Possui {quantidade: 3}]->(termo2)
MERGE (termo3:Termo {termo: "for"})
CREATE (mat)-[:Possui {quantidade: 5}]->(termo3)
MERGE (termo4:Termo {termo: "variável"})
CREATE (mat)-[:Possui {quantidade: 2}]->(termo4)
MERGE (termo5:Termo {termo: "recursão"})
CREATE (mat)-[:Possui {quantidade: 1}]->(termo5)
MERGE (termo6:Termo {termo: "compilador"})
CREATE (mat)-[:Possui {quantidade: 1}]->(termo6)

CREATE (mat:Material {titulo: "Ponteiros", link: "http://ponteiros.com.br", tipo: "pdf", id: "re_material.002", resumo: "Resumo ponteiros"})

MERGE (termo1:Termo {termo: "ponteiro"})
CREATE (mat)-[:Possui {quantidade: 6}]->(termo1)
MERGE (termo2:Termo {termo: "vetor"})
CREATE (mat)-[:Possui {quantidade: 5}]->(termo2)
MERGE (termo3:Termo {termo: "compilador"})
CREATE (mat)-[:Possui {quantidade: 4}]->(termo3)
MERGE (termo4:Termo {termo: "variável"})
CREATE (mat)-[:Possui {quantidade: 1}]->(termo4)
MERGE (termo5:Termo {termo: "endereço"})
CREATE (mat)-[:Possui {quantidade: 4}]->(termo5)
MERGE (termo6:Termo {termo: "programação"})
CREATE (mat)-[:Possui {quantidade: 2}]->(termo6)

CREATE (mat:Material {titulo: "Funções", link: "http://funcao.com.br", tipo: "html", id: "re_material.003", resumo: "Resumo funcoes"})

MERGE (termo1:Termo {termo: "função"})
CREATE (mat)-[:Possui {quantidade: 7}]->(termo1)
MERGE (termo2:Termo {termo: "referência"})
CREATE (mat)-[:Possui {quantidade: 3}]->(termo2)
MERGE (termo3:Termo {termo: "parâmetro"})
CREATE (mat)-[:Possui {quantidade: 4}]->(termo3)
MERGE (termo4:Termo {termo: "variável"})
CREATE (mat)-[:Possui {quantidade: 2}]->(termo4)
MERGE (termo5:Termo {termo: "retorno"})
CREATE (mat)-[:Possui {quantidade: 4}]->(termo5)
MERGE (termo6:Termo {termo: "programação"})
CREATE (mat)-[:Possui {quantidade: 2}]->(termo6)
MERGE (termo7:Termo {termo: "for"})
CREATE (mat)-[:Possui {quantidade: 1}]->(termo7)

CREATE (mat:Material {titulo: "Recursão", link: "http://recursao.com.br", tipo: "html", id: "re_material.004", resumo: "Resumo recursão"})

MERGE (termo1:Termo {termo: "função"})
CREATE (mat)-[:Possui {quantidade: 3}]->(termo1)
MERGE (termo2:Termo {termo: "recursão"})
CREATE (mat)-[:Possui {quantidade: 7}]->(termo2)
MERGE (termo3:Termo {termo: "parâmetro"})
CREATE (mat)-[:Possui {quantidade: 3}]->(termo3)
MERGE (termo4:Termo {termo: "repetição"})
CREATE (mat)-[:Possui {quantidade: 3}]->(termo4)
MERGE (termo5:Termo {termo: "retorno"})
CREATE (mat)-[:Possui {quantidade: 2}]->(termo5)
MERGE (termo6:Termo {termo: "compilador"})
CREATE (mat)-[:Possui {quantidade: 1}]->(termo6)
MERGE (termo7:Termo {termo: "for"})
CREATE (mat)-[:Possui {quantidade: 4}]->(termo7)

** Setar o número de ocorrências de um termo, no próprio termo **

match (termo:Termo)<-[:Possui]-(mat:Material)
with termo, count(mat) as ocorr
set termo.ocorrencias = ocorr

** Similaridade **

match (mat:Material)
with count(mat) as N

match (mat1:Material {id: "re_material.002"})-[r1:Possui]->(termo:Termo)<-[r2:Possui]-(mat2:Material)
with N, mat1, mat2, termo, ((log10(r1.quantidade)/log10(2))+1.0) as tf1, ((log10(r2.quantidade)/log10(2))+1.0) as tf2,  log10(N/(termo.ocorrencias*1.0))/log10(2) as idf
with N, mat1, mat2, sum(tf1*tf2*idf*idf) as num

match (mat1)-[r1:Possui]->(termo:Termo)
with N, mat1, mat2, num, termo, ((log10(r1.quantidade)/log10(2))+1.0) as tf1, log10(N/(termo.ocorrencias*1.0))/log10(2) as idf1
with N, mat1, mat2, num, sum(tf1*idf1) as soma_tf_idf1

match (mat2)-[r2:Possui]->(termo:Termo)
with mat1, mat2, num, soma_tf_idf1, termo, ((log10(r2.quantidade)/log10(2))+1.0) as tf2, log10(N/(termo.ocorrencias*1.0))/log10(2) as idf2
with mat1, mat2, num, soma_tf_idf1, sum(tf2*idf2) as soma_tf_idf2

return mat1, mat2, num / sqrt(soma_tf_idf1*soma_tf_idf2) as similaridade 
order by similaridade desc

** Similaridade - Mais otimizado **

match (mat:Material)
with count(mat) as N

match (mat1:Material {id: "re_material.002"})-[r1:Possui]->(termo:Termo)
with N, mat1, termo, ((log10(r1.quantidade)/log10(2))+1.0) as tf1, log10(N/(termo.ocorrencias*1.0))/log10(2) as idf1
with N, mat1, sum(tf1*idf1) as soma_tf_idf1

match (mat1)-[r1:Possui]->(termo:Termo)<-[r2:Possui]-(mat2:Material)
with N, mat1, mat2, soma_tf_idf1, termo, ((log10(r1.quantidade)/log10(2))+1.0) as tf1, ((log10(r2.quantidade)/log10(2))+1.0) as tf2,  log10(N/(termo.ocorrencias*1.0))/log10(2) as idf
with N, mat1, mat2, sum(tf1*tf2*idf*idf) as num, soma_tf_idf1

match (mat2)-[r2:Possui]->(termo:Termo)
with mat1, mat2, num, soma_tf_idf1, termo, ((log10(r2.quantidade)/log10(2))+1.0) as tf2, log10(N/(termo.ocorrencias*1.0))/log10(2) as idf2
with mat1, mat2, num, soma_tf_idf1, sum(tf2*idf2) as soma_tf_idf2

return mat1, mat2, num / sqrt(soma_tf_idf1*soma_tf_idf2) as similaridade 
order by similaridade desc